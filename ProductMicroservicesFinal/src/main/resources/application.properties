spring.application.name=ProductMicroservices

server.port=8081
spring.kafka.producer.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

#waits for the acknowledgement from all the broker
spring.kafka.producer.acks=all

#waits for the acknowledgement from the leader
#spring.kafka.producer.acks=1

#Does not wait for the acknowledgement
#spring.kafka.producer.acks=0

#how many times kafka producer will try to send a message before giving up or failed. Default values is 2,147,483,647
#spring.kafka.producer.retries=10

# How long the producer will wait before retrying to send a message.Default value is 100 ms
#spring.kafka.producer.properties.retry.backoff.ms=1000

# Time it takes to send the message to the broker
# Time it spends to retry
# time it takes time for ack
# we can do this in one single property.
#The maximum time the kafka producer can spend trying to deliver a message. The Default value is 120000 ms(2 mins)
#default
#Recommended if we use this then no need to use retries and backoff properties
spring.kafka.producer.properties.delivery.timeout.ms=120000
# will give the Timeout exception if not able to get the acknowledgement from the broker
# if wanted to change the delivery timeout then should follow below
### delivery.timeout.ms >= linger.ms + request.timeout.ms

# The maximum time in milliseconds that the producer will wait and buffer the data before sending a batch of messages to the broker.
# Default value is 0
spring.kafka.producer.properties.linger.ms=0

# The maximum time to wait for the response from the broker after sending the request.
# Default value is 30000 ms
spring.kafka.producer.properties.request.timeout.ms=30000

# At the time of creation,
# the minimum number of replicas that should acknowledge the write
# so that the acks will be success after two acknowledgement
# kafka-topics --create --topic insync-topic --bootstrap-server localhost:9092, localhost:9094 --replication-factor 3 partitions 3 ?config min.insync.replicas=2
# if we stop two brokers then we will be left of only one kafka server then error will be thrown KafkaProducerException: Failed to send due to ERROR NOT_ENOUGH_REPLICA